buildscript {
    repositories { jcenter() }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.2'
    }
}

apply plugin: 'idea'
apply plugin: 'scala'
apply from: 'gradle/scalatest.gradle'


compileScala.scalaCompileOptions.additionalParameters = ['-feature']
compileTestScala.scalaCompileOptions.additionalParameters = ['-feature']
test.maxParallelForks = 1

repositories {
    jcenter()
    maven { url 'https://repo.typesafe.com/typesafe/releases/' }
    maven { url 'https://maven.twttr.com/' }
    // Temporary until jcenter comes back for zipkin
    maven { url 'https://dl.bintray.com/openzipkin/zipkin/' }
}

ext {
    scalaVersion = '2.11.7'
    scalaInterfaceVersion = '2.11'
    zipkinVersion = '1.6.0'
}

apply plugin: 'com.github.johnrengelman.shadow'
ext.mainClassName = 'com.twitter.zipkin.aggregate.RunHadoopJob'

if (!project.hasProperty("hosts")) {
    ext.hosts = "localhost"
}

if (!project.hasProperty("port")) {
    ext.port = "9160"
}

task run(type:JavaExec) {
    main = mainClassName
    classpath = sourceSets.main.runtimeClasspath
    workingDir project.buildDir
    // only cassandra is supported
    args '--source', "cassandra", '--hosts', hosts, '--port', port
}

jar.manifest.attributes 'Main-Class': mainClassName

tasks.build.dependsOn(shadowJar)

artifacts {
    shadowJar
}

repositories {
    // For cascading
    maven { url 'http://conjars.org/repo' }
}

dependencies {
    compile "org.scala-lang:scala-library:${scalaVersion}"

    compile "io.zipkin:zipkin-scrooge:${zipkinVersion}"
    // @fixme cassandra aggregate stuff needs to be rewritten to use CqlInputFormat
    // compile "io.zipkin:zipkin-cassandra:${zipkinVersion}"
    compile "org.apache.hadoop:hadoop-client:2.4.0"
    compile "com.twitter:scalding-core_${scalaInterfaceVersion}:0.15.1-RC13"
}
